name: Deploy backend images to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'backend/api-server/**'
      - 'backend/ai-server/**'
      - '.github/workflows/deploy.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api_changed: ${{ steps.api.outputs.changed }}
      ai_changed: ${{ steps.ai.outputs.changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Check for changes in api-server
        id: api
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^backend/api-server/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for changes in ai-server
        id: ai
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^backend/ai-server/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  deploy-api:
    needs: detect-changes
    if: needs.detect-changes.outputs.api_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build & Push API Image
        run: |
          IMAGE=${{ secrets.ECR_REGISTRY }}/api-server:latest
          docker build -t $IMAGE ./backend/api-server
          docker push $IMAGE

  deploy-ai:
    needs: detect-changes
    if: needs.detect-changes.outputs.ai_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build & Push AI Image
        run: |
          IMAGE=${{ secrets.ECR_REGISTRY }}/ai-server:latest
          docker build -t $IMAGE ./backend/ai-server
          docker push $IMAGE
